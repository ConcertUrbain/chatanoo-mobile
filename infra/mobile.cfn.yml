AWSTemplateFormatVersion: 2010-09-09
Description: Chatanoo Mobile Interface

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Configuration
        Parameters: ["ProjectName", "UseSecureConnection", "DeploymentBucket", "DeploymentZipKey"]
      - Label:
          default: DNS Configuration
        Parameters: ["SubDomainName", "Route53HostedZone"]
      - Label:
          default: Advanced Configuration
        Parameters: ["WSURL", "ApiKeysUrl", "MediaCenterUrl", "MediaCenterInputBucket", "MediaCenterIdentityPool"]
      - Label:
          default: Custom Resources Configuration
        Parameters: ["S3UploaderLambda", "CloudFrontIdentityLambda", "CloudFrontCertificateLambda"]

Parameters:
  ProjectName:
    Type: String
  UseSecureConnection:
    Description: Use HTTPS to connect this website
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"
  DeploymentBucket:
    Description: Url of Chatanoo Mobile Interface deployment zip
    Type: String
    Default: chatanoo-deployment
  DeploymentZipKey:
    Description: Url of Chatanoo Mobile Interface deployment zip
    Type: String
    Default: mobile/1.0.0.zip

  SubDomainName:
    Description: Subdomain Name of the website
    Type: String
  Route53HostedZone:
    Description: AWS Route53 HostedZone ID of the domain
    Type: String

  WSURL:
    Description: Url of Chatanoo Core
    Type: String
    Default: https://core.aws.chatanoo.org
  ApiKeysUrl:
    Description: Url of a JSON file that contains all api_keys
    Type: String
  MediaCenterUrl:
    Description: Url of Chatanoo Medias Center
    Type: String
    Default: https://medias.aws.chatanoo.org
  MediaCenterInputBucket:
    Description: Input Bucket Name of the Medias Center
    Type: String
    Default: chatanoo-medias-input
  MediaCenterIdentityPool:
    Description: Cognito IdentityPool of the Medias Center
    Type: String
    Default: eu-west-1:b263aeab-02ae-4268-b338-95e7ea79e255

  S3UploaderLambda:
    Description: Lambda for the S3 Uploader Custom Resource
    Type: String
    Default: aws-cloudformation-s3-uploader-1-0-0"
  CloudFrontIdentityLambda:
    Description: Lambda for the CloudFront Identity Custom Resource
    Type: String
    Default: aws-cloudformation-cloudfront-identity-1-0-0"
  CloudFrontCertificateLambda:
    Description: Lambda for the CloudFront Certificate Custom Resource
    Type: String
    Default: aws-cloudformation-cloudfront-certificate-1-0-0"
  Route53HostedZoneDetailsLambda:
    Description: Lambda for the Route53 HostedZone Details Custom Resource
    Type: String
    Default: aws-cloudformation-route53-hostedzone-details-1-0-0

# Mappings

Conditions:
  UseDNSRecord: !Not [!Equals [!Ref Route53HostedZone, ""]]
  UseHTTPS: !Equals [!Ref UseSecureConnection, "true"]
  UseDNSAndHTTPS: !And
    - !Condition UseDNSRecord
    - !Condition UseHTTPS

Resources:

  DomainName:
    Type: Custom::Route53HostedZoneDetails
    Version: '1.0'
    Condition: UseDNSRecord
    Properties:
      ServiceToken: !Join [':', ['arn:aws:lambda', !Ref 'AWS::Region', !Ref 'AWS::AccountId', function, !Ref Route53HostedZoneDetailsLambda]]
      Id: !Ref Route53HostedZone

  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
      Tags:
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mobile

  StaticWebsite:
    Type: Custom::S3Uploader
    Version: 1.0
    Properties:
      ServiceToken: !Join [":", ["arn:aws:lambda", !Ref 'AWS::Region', !Ref 'AWS::AccountId', "function", !Ref S3UploaderLambda]]
      Source:
        Url: !Join ['', ['https://s3.amazonaws.com/', !Ref DeploymentBucket, '/', !Ref DeploymentZipKey]]
        Unzip: true
      Destination:
        Bucket: !Ref S3Bucket
        Key: ''

  StaticWebsiteEnvironement:
    Type: Custom::S3Uploader
    Version: 1.0
    Properties:
      ServiceToken: !Join [":", [ "arn:aws:lambda", !Ref 'AWS::Region', !Ref 'AWS::AccountId', "function", !Ref S3UploaderLambda] ]
      Source:
        Json:
          WS_URL: !Ref WSURL
          API_KEYS: !Ref ApiKeysUrl
          MEDIAS_CENTER:
            url: !Ref MediaCenterUrl
            input_bucket: !Ref MediaCenterInputBucket
            identity_pool: !Ref MediaCenterIdentityPool
            region: !Ref 'AWS::Region'
      Destination:
        Bucket: !Ref S3Bucket
        Key: js/env.json
    DependsOn: StaticWebsite

  CDNIdentity:
    Type: Custom::CloudFrontIdentity
    Version: 1.0
    Properties:
      ServiceToken: !Join [":",[ "arn:aws:lambda", !Ref 'AWS::Region', !Ref 'AWS::AccountId', "function", !Ref CloudFrontIdentityLambda ] ]
      Comment: !Join ["-",[ "access-identity", !Ref S3Bucket ] ]

  CDNCertificate:
    Type: Custom::CloudFrontCertificate
    Version: 1.0
    Properties:
      ServiceToken: !Join [":",[ "arn:aws:lambda", !Ref 'AWS::Region', !Ref 'AWS::AccountId', "function", !Ref CloudFrontCertificateLambda ] ]
      DomainName: !Join [".",[ !Ref SubDomainName, !Ref DomainName ] ]
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          ValidationDomain:"Fn::Join" : [".",[ !Ref SubDomainName, !Ref DomainName ] ]
      Tags:
        - Key: chatanoo:project
          Value: !Ref ProjectName
        - Key: chatanoo:component
          Value: mobile
    Condition: UseDNSAndHTTPS

  CDNDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: StaticWebsiteEnvironement
    Properties:
      DistributionConfig:
        Comment: Chatanoo Mobile Interface Distribution
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: !Join ["-", ["s3Origin", !Ref S3Bucket]]
            S3OriginConfig:
              OriginAccessIdentity: !Join ["",[ "origin-access-identity/cloudfront/", !Ref CDNIdentity ] ]
        Enabled: "true"
        Aliases:
          - !If
            - UseDNSRecord
            - !Join ['.', [!Ref SubDomainName, !Ref DomainName]]
            - !Ref 'AWS::NoValue'
        PriceClass: PriceClass_All
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods: [ "GET", "HEAD" ]
          TargetOriginId: !Join ["-", ["s3Origin", !Ref S3Bucket]]
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        ViewerCertificate: !If
          - UseDNSAndHTTPS
          - SSLSupportMethod: sni-only
            ACMCertificateArn: !Ref CDNCertificate
            MinimumProtocolVersion: TLSv1
            Certificate: !Ref CDNCertificate
            CertificateSource: acm
          - !Ref 'AWS::NoValue'

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CDNDistribution
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2008-10-17
        Statement:
          - Sid: 2
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CDNIdentity.S3CanonicalUserId
            Action: s3:GetObject
            Resource: !Join ["",[ "arn:aws:s3:::", !Ref S3Bucket, "/*" ] ]

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Comment: Public DNS Record for Chatanoo Mobile Interface
      HostedZoneId: !If ["UseDNSRecord", !Ref Route53HostedZone, !Ref 'AWS::NoValue']
      Name: !Join ["", [!Ref SubDomainName, ".", !Ref DomainName, "."]]
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt CDNDistribution.DomainName
    Condition: UseDNSRecord

Outputs:
  Url:
    Value: !If
      - UseDNSRecord
      - !Join ['', [!If [UseHTTPS, 'https://', 'http://'], !Ref SubDomainName, '.', !Ref DomainName]]
      - !Join ['', [!If [UseHTTPS, 'https://', 'http://'], !GetAtt CDNDistribution.DomainName]]
